<?php
/**
 * Test SSE Connection
 * Ki·ªÉm tra k·∫øt n·ªëi SSE v√† debug v·∫•n ƒë·ªÅ realtime
 */

require_once '../config/config.php';
require_once '../config/database.php';
require_once '../models/InternalMessage.php';

class SSETest {
    private $db;
    private $internalMessageModel;

    public function __construct() {
        $database = Database::getInstance();
        $this->db = $database->getConnection();
        $this->internalMessageModel = new InternalMessage();
    }

    public function runTests() {
        echo "<h1>üß™ Test SSE Connection</h1>";

        // 1. Ki·ªÉm tra session
        $this->testSession();

        // 2. Ki·ªÉm tra database connection
        $this->testDatabase();

        // 3. Ki·ªÉm tra SSE endpoint
        $this->testSSEEndpoint();

        // 4. T·∫°o th√¥ng b√°o test
        $this->createTestMessage();

        // 5. H∆∞·ªõng d·∫´n test th·ªß c√¥ng
        $this->showManualTestInstructions();
    }

    private function testSession() {
        echo "<h2>1. Ki·ªÉm tra Session</h2>";

        session_start();

        if (isset($_SESSION['user_id'])) {
            echo "<p style='color: green;'>‚úÖ Session user_id: {$_SESSION['user_id']}</p>";
        } else {
            echo "<p style='color: red;'>‚ùå Kh√¥ng c√≥ session user_id</p>";
        }

        if (isset($_SESSION['user_role'])) {
            echo "<p style='color: green;'>‚úÖ Session user_role: {$_SESSION['user_role']}</p>";
        } else {
            echo "<p style='color: red;'>‚ùå Kh√¥ng c√≥ session user_role</p>";
        }
    }

    private function testDatabase() {
        echo "<h2>2. Ki·ªÉm tra Database</h2>";

        try {
            // Ki·ªÉm tra b·∫£ng internal_messages
            $stmt = $this->db->query("SELECT COUNT(*) FROM internal_messages");
            $count = $stmt->fetchColumn();
            echo "<p style='color: green;'>‚úÖ B·∫£ng internal_messages: {$count} th√¥ng b√°o</p>";

            // Ki·ªÉm tra b·∫£ng internal_message_recipients
            $stmt = $this->db->query("SELECT COUNT(*) FROM internal_message_recipients");
            $count = $stmt->fetchColumn();
            echo "<p style='color: green;'>‚úÖ B·∫£ng internal_message_recipients: {$count} b·∫£n ghi</p>";

            // Ki·ªÉm tra users c√≥ role admin
            $stmt = $this->db->query("SELECT COUNT(*) FROM users WHERE role IN ('manager', 'admin')");
            $count = $stmt->fetchColumn();
            echo "<p style='color: green;'>‚úÖ Users admin: {$count} ng∆∞·ªùi</p>";

        } catch (Exception $e) {
            echo "<p style='color: red;'>‚ùå L·ªói database: " . $e->getMessage() . "</p>";
        }
    }

    private function testSSEEndpoint() {
        echo "<h2>3. Ki·ªÉm tra SSE Endpoint</h2>";

        $endpoints = [
            'Admin SSE' => '/admin/internal-messages/sse',
            'Super Admin SSE' => '/superadmin/internal-messages/sse'
        ];

        foreach ($endpoints as $name => $endpoint) {
            echo "<h3>{$name}</h3>";
            echo "<p><strong>URL:</strong> <code>{$endpoint}</code></p>";

            // Ki·ªÉm tra xem endpoint c√≥ t·ªìn t·∫°i kh√¥ng
            $fullUrl = SITE_URL . $endpoint;
            echo "<p><strong>Full URL:</strong> <code>{$fullUrl}</code></p>";

            // Test v·ªõi curl
            $this->testEndpointWithCurl($fullUrl, $name);
        }
    }

    private function testEndpointWithCurl($url, $name) {
        echo "<h4>Test v·ªõi cURL:</h4>";

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_TIMEOUT, 5);
        curl_setopt($ch, CURLOPT_HEADER, true);
        curl_setopt($ch, CURLOPT_NOBODY, true);

        $response = curl_exec($ch);
        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        $error = curl_error($ch);
        curl_close($ch);

        if ($error) {
            echo "<p style='color: red;'>‚ùå cURL Error: {$error}</p>";
        } else {
            echo "<p style='color: green;'>‚úÖ HTTP Code: {$httpCode}</p>";

            if ($httpCode == 200) {
                echo "<p style='color: green;'>‚úÖ Endpoint ho·∫°t ƒë·ªông</p>";
            } elseif ($httpCode == 401) {
                echo "<p style='color: orange;'>‚ö†Ô∏è C·∫ßn ƒëƒÉng nh·∫≠p</p>";
            } else {
                echo "<p style='color: red;'>‚ùå Endpoint kh√¥ng ho·∫°t ƒë·ªông</p>";
            }
        }
    }

    private function createTestMessage() {
        echo "<h2>4. T·∫°o Th√¥ng B√°o Test</h2>";

        try {
            // L·∫•y Super Admin ƒë·∫ßu ti√™n
            $stmt = $this->db->prepare("SELECT id FROM users WHERE role = 'super_admin' LIMIT 1");
            $stmt->execute();
            $superAdmin = $stmt->fetch(PDO::FETCH_ASSOC);

            if (!$superAdmin) {
                echo "<p style='color: red;'>‚ùå Kh√¥ng t√¨m th·∫•y Super Admin</p>";
                return;
            }

            // L·∫•y Admin ƒë·∫ßu ti√™n
            $stmt = $this->db->prepare("SELECT id FROM users WHERE role = 'manager' LIMIT 1");
            $stmt->execute();
            $admin = $stmt->fetch(PDO::FETCH_ASSOC);

            if (!$admin) {
                echo "<p style='color: red;'>‚ùå Kh√¥ng t√¨m th·∫•y Admin</p>";
                return;
            }

            // T·∫°o th√¥ng b√°o test
            $messageData = [
                'title' => 'Test SSE - ' . date('Y-m-d H:i:s'),
                'content' => 'ƒê√¢y l√† th√¥ng b√°o test ƒë·ªÉ ki·ªÉm tra SSE. Th·ªùi gian: ' . date('Y-m-d H:i:s'),
                'message_type' => 'notification',
                'priority' => 'high',
                'sender_id' => $superAdmin['id'],
                'recipients' => [$admin['id']]
            ];

            $result = $this->internalMessageModel->createMessage($messageData);

            if ($result) {
                echo "<p style='color: green;'>‚úÖ T·∫°o th√¥ng b√°o test th√†nh c√¥ng (ID: {$result})</p>";
                echo "<p><strong>Ti√™u ƒë·ªÅ:</strong> {$messageData['title']}</p>";
                echo "<p><strong>Ng∆∞·ªùi g·ª≠i:</strong> Super Admin (ID: {$superAdmin['id']})</p>";
                echo "<p><strong>Ng∆∞·ªùi nh·∫≠n:</strong> Admin (ID: {$admin['id']})</p>";
            } else {
                echo "<p style='color: red;'>‚ùå L·ªói t·∫°o th√¥ng b√°o test</p>";
            }

        } catch (Exception $e) {
            echo "<p style='color: red;'>‚ùå L·ªói: " . $e->getMessage() . "</p>";
        }
    }

    private function showManualTestInstructions() {
        echo "<h2>5. H∆∞·ªõng D·∫´n Test Th·ªß C√¥ng</h2>";

        echo "<div style='background: #f8f9fa; padding: 20px; border-radius: 8px;'>";
        echo "<h3>üîß C√°ch Test Realtime:</h3>";
        echo "<ol>";
        echo "<li><strong>M·ªü 2 tab tr√¨nh duy·ªát</strong></li>";
        echo "<li><strong>Tab 1 - Super Admin:</strong>";
        echo "<ul>";
        echo "<li>ƒêƒÉng nh·∫≠p Super Admin: <code>" . SITE_URL . "/superadmin</code></li>";
        echo "<li>Truy c·∫≠p: <code>" . SITE_URL . "/superadmin/internal-messages/send</code></li>";
        echo "<li>G·ª≠i th√¥ng b√°o m·ªõi</li>";
        echo "</ul></li>";
        echo "<li><strong>Tab 2 - Admin:</strong>";
        echo "<ul>";
        echo "<li>ƒêƒÉng nh·∫≠p Admin: <code>" . SITE_URL . "/admin</code></li>";
        echo "<li>M·ªü Developer Tools (F12) ‚Üí Console</li>";
        echo "<li>Xem c√≥ log 'SSE Connected' kh√¥ng</li>";
        echo "<li>G·ª≠i th√¥ng b√°o t·ª´ Tab 1 v√† xem c√≥ popup kh√¥ng</li>";
        echo "</ul></li>";
        echo "</ol>";

        echo "<h3>üêõ Debug SSE:</h3>";
        echo "<p>M·ªü Console trong Developer Tools v√† xem c√°c log:</p>";
        echo "<ul>";
        echo "<li><code>SSE Connected</code> - K·∫øt n·ªëi th√†nh c√¥ng</li>";
        echo "<li><code>SSE Error</code> - L·ªói k·∫øt n·ªëi</li>";
        echo "<li><code>Error parsing SSE message</code> - L·ªói parse d·ªØ li·ªáu</li>";
        echo "<li><code>Error updating unread count</code> - L·ªói c·∫≠p nh·∫≠t s·ªë th√¥ng b√°o</li>";
        echo "</ul>";

        echo "<h3>üîç Ki·ªÉm Tra Network:</h3>";
        echo "<p>Trong Developer Tools ‚Üí Network tab:</p>";
        echo "<ul>";
        echo "<li>T√¨m request ƒë·∫øn <code>/admin/internal-messages/sse</code></li>";
        echo "<li>Ki·ªÉm tra Response c√≥ d·∫°ng <code>data: {...}</code> kh√¥ng</li>";
        echo "<li>Ki·ªÉm tra Status Code c√≥ ph·∫£i 200 kh√¥ng</li>";
        echo "</ul>";
        echo "</div>";
    }
}

// Ch·∫°y test
$test = new SSETest();
$test->runTests();
?>
